# Python App Service to Linux on Azure
# Build a Python app service and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  system.debug: true

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'ee063447-126a-4231-a067-4f5cee2df4e1'

  # Web app name
  webAppName: 'deerfoxapp'

  # Agent VM image name
  #vmImageName: 'ubuntu-latest'

  # Working Directory
  workingDirectory: '$(Agent.BuildDirectory)'

  # Agent VM image name
  #agentImage: 'ubuntu-latest'
  poolName: local


stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      name: $(poolName)

    steps:
    - bash: |
        if [ -f extensions.csproj ]
        then
            dotnet build extensions.csproj --runtime ubuntu.22.04-x64 --output ./bin 
        fi
      env:
        TOKEN_VALUE: $(githubtoken)
      workingDirectory: $(workingDirectory)
      displayName: 'Build extensions'

    - task: UsePythonVersion@0
      displayName: 'Use Python 3.x'
      env:
        TOKEN_VALUE: $(githubtoken)
      inputs:
 #       versionSpec: '3.12.3'
#        githubToken: $(TOKEN_VALUE)
        disableDownloadFromRegistry: true

#     - task: CopyFiles@2
#       inputs:
#         SourceFolder: '$(Agent.TempDirectory)'
#         Contents: '**'
#         TargetFolder: '$(Build.ArtifactStagingDirectory)/AgentTempDirectory'
#       displayName: 'Copy Agent.TempDirectory to drop'
#      condition: eq(variables['system.debug'], 'true')

    - bash: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target="./.python_packages/lib/site-packages"
      workingDirectory: $(Build.SourcesDirectory)
      displayName: 'Install application dependencies'

    - script: |
        echo "$(Build.ArtifactStagingDirectory)"
        cd $(Build.SourcesDirectory) 
        zip -r $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip ./ -x "$(Build.SourcesDirectory)/.git/*"
      displayName: 'Create Archive'
      workingDirectory: $(Build.SourcesDirectory)

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      name: $(poolName)

    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: 'webAppLinux'
              WebAppName: $(webAppName)
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
#              RuntimeStack: 'PYTHON|3.11'